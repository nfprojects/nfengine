{
  "comments": [
    {
      "key": {
        "uuid": "baa041b7_3addb870",
        "filename": "nfEngine/nfCore/Utils/Profiler.cpp",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1002655
      },
      "writtenOn": "2016-06-23T23:01:34Z",
      "side": 1,
      "message": "Come to think of it, shouldn\u0027t each thread have a separate Timer? What do you think?",
      "revId": "d226469fbe5f51dc78c2284ff906398ba2766601",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_0183a8cd",
        "filename": "nfEngine/nfCore/Utils/Profiler.cpp",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1002654
      },
      "writtenOn": "2016-06-24T16:41:51Z",
      "side": 1,
      "message": "In the current desing it must... The timer should be part of the ProfilerScope, not the node... How this passed the review... :)",
      "parentUuid": "baa041b7_3addb870",
      "revId": "d226469fbe5f51dc78c2284ff906398ba2766601",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_6c2a6b92",
        "filename": "nfEngine/nfCore/Utils/Profiler.cpp",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 1003055
      },
      "writtenOn": "2016-06-25T00:08:23Z",
      "side": 1,
      "message": "std::make_unique\u003cProfilerNode\u003e(name)",
      "range": {
        "startLine": 89,
        "startChar": 25,
        "endLine": 89,
        "endChar": 63
      },
      "revId": "d226469fbe5f51dc78c2284ff906398ba2766601",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_c7ddd071",
        "filename": "nfEngine/nfCore/Utils/Profiler.cpp",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 1002655
      },
      "writtenOn": "2016-06-25T10:15:00Z",
      "side": 1,
      "message": "I disagree. What if underlying type of ProfilerNodePtr changes?",
      "parentUuid": "baa041b7_6c2a6b92",
      "range": {
        "startLine": 89,
        "startChar": 25,
        "endLine": 89,
        "endChar": 63
      },
      "revId": "d226469fbe5f51dc78c2284ff906398ba2766601",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_4c18c784",
        "filename": "nfEngine/nfCore/Utils/Profiler.cpp",
        "patchSetId": 3
      },
      "lineNbr": 94,
      "author": {
        "id": 1003055
      },
      "writtenOn": "2016-06-25T00:08:23Z",
      "side": 1,
      "message": "std::make_unique\u003cProfilerNode\u003e(name)",
      "range": {
        "startLine": 94,
        "startChar": 36,
        "endLine": 94,
        "endChar": 74
      },
      "revId": "d226469fbe5f51dc78c2284ff906398ba2766601",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_a7d88c80",
        "filename": "nfEngine/nfCore/Utils/Profiler.cpp",
        "patchSetId": 3
      },
      "lineNbr": 94,
      "author": {
        "id": 1002655
      },
      "writtenOn": "2016-06-25T10:15:00Z",
      "side": 1,
      "message": "As above",
      "parentUuid": "baa041b7_4c18c784",
      "range": {
        "startLine": 94,
        "startChar": 36,
        "endLine": 94,
        "endChar": 74
      },
      "revId": "d226469fbe5f51dc78c2284ff906398ba2766601",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_6c538b3a",
        "filename": "nfEngine/nfCore/Utils/Profiler.hpp",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1003055
      },
      "writtenOn": "2016-06-25T00:08:23Z",
      "side": 1,
      "message": "so many new lines...",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 15,
        "endChar": 32
      },
      "revId": "d226469fbe5f51dc78c2284ff906398ba2766601",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_07f3b80b",
        "filename": "nfEngine/nfCore/Utils/Profiler.hpp",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1002655
      },
      "writtenOn": "2016-06-25T10:15:00Z",
      "side": 1,
      "message": "Because every header is from different part of the project.\n\n* Main nfCore Header\n* nfCommon header\n* STL header\n* Private nfCore/Utils header",
      "parentUuid": "baa041b7_6c538b3a",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 15,
        "endChar": 32
      },
      "revId": "d226469fbe5f51dc78c2284ff906398ba2766601",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_2c3463f9",
        "filename": "nfEngine/nfCore/Utils/Profiler.hpp",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1003055
      },
      "writtenOn": "2016-06-25T00:08:23Z",
      "side": 1,
      "message": "to a profile",
      "range": {
        "startLine": 27,
        "startChar": 35,
        "endLine": 27,
        "endChar": 45
      },
      "revId": "d226469fbe5f51dc78c2284ff906398ba2766601",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_27ec7c28",
        "filename": "nfEngine/nfCore/Utils/Profiler.hpp",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1002655
      },
      "writtenOn": "2016-06-25T10:15:00Z",
      "side": 1,
      "message": "Nope. \"Node TO PROFILE something\"",
      "parentUuid": "baa041b7_2c3463f9",
      "range": {
        "startLine": 27,
        "startChar": 35,
        "endLine": 27,
        "endChar": 45
      },
      "revId": "d226469fbe5f51dc78c2284ff906398ba2766601",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_8120d8f8",
        "filename": "nfEngine/nfCore/Utils/Profiler.hpp",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 1002654
      },
      "writtenOn": "2016-06-24T16:41:51Z",
      "side": 1,
      "message": "Use atomic operations instead of mutex, because it\u0027s slower. Ideally, we should use separate counters for each thread, so wouldn\u0027t need any synchronization (except summing everyting together at the end).",
      "range": {
        "startLine": 45,
        "startChar": 4,
        "endLine": 45,
        "endChar": 32
      },
      "revId": "d226469fbe5f51dc78c2284ff906398ba2766601",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_cc25f7c2",
        "filename": "nfEngine/nfCore/Utils/Profiler.hpp",
        "patchSetId": 3
      },
      "lineNbr": 148,
      "author": {
        "id": 1003055
      },
      "writtenOn": "2016-06-25T00:08:23Z",
      "side": 1,
      "message": "can\u0027t we just make .c_str() in code, when we need it?",
      "range": {
        "startLine": 139,
        "startChar": 3,
        "endLine": 148,
        "endChar": 78
      },
      "revId": "d226469fbe5f51dc78c2284ff906398ba2766601",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_e7f574ed",
        "filename": "nfEngine/nfCore/Utils/Profiler.hpp",
        "patchSetId": 3
      },
      "lineNbr": 148,
      "author": {
        "id": 1002655
      },
      "writtenOn": "2016-06-25T10:15:00Z",
      "side": 1,
      "message": "No difference. Besides, this code is already merged and this change is not about it. Too late, sir. ;)",
      "parentUuid": "baa041b7_cc25f7c2",
      "range": {
        "startLine": 139,
        "startChar": 3,
        "endLine": 148,
        "endChar": 78
      },
      "revId": "d226469fbe5f51dc78c2284ff906398ba2766601",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_8177b801",
        "filename": "nfEngine/nfCore/Utils/ProfilerNodeStats.hpp",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 1002654
      },
      "writtenOn": "2016-06-24T16:41:51Z",
      "side": 1,
      "message": "As said before, try to make these atomic and all the operations thread safe withount need for external synchronization",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 18,
        "endChar": 78
      },
      "revId": "d226469fbe5f51dc78c2284ff906398ba2766601",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_41609035",
        "filename": "nfEngine/nfCoreTest/Profiler.cpp",
        "patchSetId": 3
      },
      "lineNbr": 26,
      "author": {
        "id": 1002654
      },
      "writtenOn": "2016-06-24T16:41:51Z",
      "side": 1,
      "message": "It\u0027s nothing. I suggest 100k or more",
      "range": {
        "startLine": 26,
        "startChar": 47,
        "endLine": 26,
        "endChar": 51
      },
      "revId": "d226469fbe5f51dc78c2284ff906398ba2766601",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_21634c43",
        "filename": "nfEngine/nfCoreTest/Profiler.cpp",
        "patchSetId": 3
      },
      "lineNbr": 166,
      "author": {
        "id": 1002654
      },
      "writtenOn": "2016-06-24T16:41:51Z",
      "side": 1,
      "message": "Spawn as many threads, as there is logical cores in the system",
      "range": {
        "startLine": 158,
        "startChar": 0,
        "endLine": 166,
        "endChar": 14
      },
      "revId": "d226469fbe5f51dc78c2284ff906398ba2766601",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}