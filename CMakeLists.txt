# @file
# @author LKostyra (costyrra.xl@gmail.com)
# @brief  Main CMake file for nfEngine

CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

PROJECT(nfEngine)

MESSAGE("Generating Makefile for nfEngine project")

INCLUDE(FindPkgConfig)

# Pre-define Release build
IF(NOT DEFINED CMAKE_BUILD_TYPE OR CMAKE_BUILD_TYPE STREQUAL "")
    SET(CMAKE_BUILD_TYPE Release)
ENDIF(NOT DEFINED CMAKE_BUILD_TYPE OR CMAKE_BUILD_TYPE STREQUAL "")

# Pre-define 64-bit build platform
IF(NOT DEFINED BUILD_PLATFORM)
    EXECUTE_PROCESS(COMMAND uname -m
                    OUTPUT_VARIABLE BUILD_PLATFORM OUTPUT_STRIP_TRAILING_WHITESPACE)
ENDIF(NOT DEFINED BUILD_PLATFORM)

# Set required variables
SET(CMAKE_CXX_FLAGS       "${CMAKE_CXX_FLAGS} -O2 -std=c++0x")
SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -O0 -g -std=c++0x")

# If any macros specific to project are needed, prefix them with NFE_
SET(NFE_ROOT_DIRECTORY ${CMAKE_SOURCE_DIR})
SET(NFE_OUTPUT_DIRECTORY ${NFE_ROOT_DIRECTORY}/Bin/${BUILD_PLATFORM}/${CMAKE_BUILD_TYPE})
SET(NFEDEPS_LIB_DIRECTORY ${NFE_ROOT_DIRECTORY}/nfEngineDeps/Bin/${BUILD_PLATFORM}/${CMAKE_BUILD_TYPE})
SET(NFCOMMON_DIRECTORY ${NFE_ROOT_DIRECTORY}/nfEngine/nfCommon)
SET(NFCOMMONTEST_DIRECTORY ${NFE_ROOT_DIRECTORY}/nfEngine/nfCommonTest)
SET(RENDERERS_DIRECTORY ${NFE_ROOT_DIRECTORY}/nfEngine/Renderers)
SET(NFRENDEREROGL4_DIRECTORY ${RENDERERS_DIRECTORY}/nfRendererOGL4)

# Enable SSE4.1 instructions
ADD_DEFINITIONS("-msse4.1")

# Enable all warnings and make them errors
ADD_DEFINITIONS("-Wall -Wpedantic -Wextra -Wno-sign-compare -Werror")

# Building outputs
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${NFE_OUTPUT_DIRECTORY})
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${NFE_OUTPUT_DIRECTORY})

MESSAGE("Build type is ${CMAKE_BUILD_TYPE}")
MESSAGE("Output path is ${NFE_OUTPUT_DIRECTORY}")
MESSAGE("Platform is ${BUILD_PLATFORM}")

# Add all projects
ADD_SUBDIRECTORY("nfEngine")
#ADD_SUBDIRECTORY("nfEngineTest")

FILE(MAKE_DIRECTORY ${NFE_OUTPUT_DIRECTORY})
