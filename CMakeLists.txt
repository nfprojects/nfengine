# @file   CMakeLists.txt
# @author LKostyra (costyrra.xl@gmail.com)
# @brief  Main CMake file for nfEngine

CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

PROJECT(nfEngine)

MESSAGE("Generating Makefile for nfEngine project")

INCLUDE(FindPkgConfig)

# Pre-define Release build
IF(NOT DEFINED CMAKE_BUILD_TYPE OR CMAKE_BUILD_TYPE STREQUAL "")
    SET(CMAKE_BUILD_TYPE Release)
ENDIF(NOT DEFINED CMAKE_BUILD_TYPE OR CMAKE_BUILD_TYPE STREQUAL "")

# Pre-define 64-bit build platform
IF(NOT DEFINED CMAKE_BUILD_PLATFORM)
    SET(CMAKE_BUILD_PLATFORM "x86_64")
ENDIF(NOT DEFINED CMAKE_BUILD_PLATFORM)

# Set required variables
SET(CMAKE_CXX_FLAGS       "${CMAKE_CXX_FLAGS} -O2 -std=c++0x")
SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -O0 -g -std=c++0x")

# Add build platform to build flags
IF(CMAKE_BUILD_PLATFORM MATCHES "x86_64")
    SET(CMAKE_CXX_FLAGS       "${CMAKE_CXX_FLAGS} -m64")
    SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -m64")
ELSEIF(CMAKE_BUILD_PLATFORM MATCHES "i386")
    SET(CMAKE_CXX_FLAGS       "${CMAKE_CXX_FLAGS} -m32")
    SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -m32")
ELSE(CMAKE_BUILD_PLATFORM MATCHES "x86_64")
    MESSAGE("Incorrect build configuration provided: ${CMAKE_BUILD_PLATFORM}")
    MESSAGE("If you want specific build platform, select from following: x86_64, i386")
    MESSAGE(FATAL_ERROR "Stopping Makefile generation.")
ENDIF(CMAKE_BUILD_PLATFORM MATCHES "x86_64")

# If any macros specific to project are needed, prefix them with NFE_
SET(NFE_ROOT_DIRECTORY ${CMAKE_SOURCE_DIR})
SET(NFE_OUTPUT_DIRECTORY ${NFE_ROOT_DIRECTORY}/Bin/${CMAKE_BUILD_PLATFORM}/${CMAKE_BUILD_TYPE})
SET(NFEDEPS_LIB_DIRECTORY ${NFE_ROOT_DIRECTORY}/nfEngineDeps/Bin/${CMAKE_BUILD_PLATFORM}/${CMAKE_BUILD_TYPE})
SET(NFCOMMON_DIRECTORY ${NFE_ROOT_DIRECTORY}/nfEngine/nfCommon)
SET(NFCOMMONTEST_DIRECTORY ${NFE_ROOT_DIRECTORY}/nfEngine/nfCommonTest)

# Enable SSE4.1 instructions
ADD_DEFINITIONS("-msse4.1")

# Building outputs
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${NFE_OUTPUT_DIRECTORY})
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${NFE_OUTPUT_DIRECTORY})

MESSAGE("Build type is ${CMAKE_BUILD_TYPE}")
MESSAGE("Output path is ${NFE_OUTPUT_DIRECTORY}")

# Add all projects
ADD_SUBDIRECTORY("nfEngine")
#ADD_SUBDIRECTORY("nfEngineTest")

FILE(MAKE_DIRECTORY ${NFE_OUTPUT_DIRECTORY})
