{
  "comments": [
    {
      "key": {
        "uuid": "facab960_c8b0bf45",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 12,
      "author": {
        "id": 1002655
      },
      "writtenOn": "2015-06-24T08:37:12Z",
      "side": 1,
      "message": "Not \"Validation\", \"Verfication\"\n\nChange-Id should be the last line. Look at other commit messages.",
      "revId": "46c9b61e4c5c436b07db31573440288b904c3cd9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_4884af5d",
        "filename": "nfEngine/nfCommon/Linux/FileSystem.cpp",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 1002655
      },
      "writtenOn": "2015-06-24T08:37:12Z",
      "side": 1,
      "message": "This should be the other way around - first check if execPath is null, then assign it to strings.",
      "revId": "46c9b61e4c5c436b07db31573440288b904c3cd9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_887a3775",
        "filename": "nfEngine/nfCommon/Linux/FileSystem.cpp",
        "patchSetId": 5
      },
      "lineNbr": 71,
      "author": {
        "id": 1002655
      },
      "writtenOn": "2015-06-24T08:37:12Z",
      "side": 1,
      "message": "I see a flaw here. Consider the situation:\n\n1. realpath returns nullptr\n2. execPath \u003d\u003d nullptr is true, assign empty path to execPathStr and print log error\n3. free(execPath) - execPath is nullptr, so you are basically calling free on an address 0x0.\n\nWhops, we have a crash.",
      "revId": "46c9b61e4c5c436b07db31573440288b904c3cd9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_c8cfdf7d",
        "filename": "nfEngine/nfCommon/Linux/FileSystem.cpp",
        "patchSetId": 5
      },
      "lineNbr": 71,
      "author": {
        "id": 1002654
      },
      "writtenOn": "2015-06-24T09:09:12Z",
      "side": 1,
      "message": "@up: Not true. http://www.open-std.org/JTC1/SC22/wg14/www/docs/n1124.pdf Page 313: \"If ptr is a null pointer, no action occurs.\"",
      "parentUuid": "facab960_887a3775",
      "revId": "46c9b61e4c5c436b07db31573440288b904c3cd9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_b4468a4d",
        "filename": "nfEngine/nfCommon/Win/FileSystem.cpp",
        "patchSetId": 5
      },
      "lineNbr": 93,
      "author": {
        "id": 1002654
      },
      "writtenOn": "2015-06-19T14:15:10Z",
      "side": 1,
      "message": "Use unique_ptr",
      "revId": "46c9b61e4c5c436b07db31573440288b904c3cd9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_745de246",
        "filename": "nfEngine/nfCommon/Win/FileSystem.cpp",
        "patchSetId": 5
      },
      "lineNbr": 93,
      "author": {
        "id": 1003055
      },
      "writtenOn": "2015-06-19T15:15:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "facab960_b4468a4d",
      "revId": "46c9b61e4c5c436b07db31573440288b904c3cd9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_288beb68",
        "filename": "nfEngine/nfCommon/Win/FileSystem.cpp",
        "patchSetId": 5
      },
      "lineNbr": 97,
      "author": {
        "id": 1002655
      },
      "writtenOn": "2015-06-24T08:37:12Z",
      "side": 1,
      "message": "Make it constant",
      "revId": "46c9b61e4c5c436b07db31573440288b904c3cd9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_f47bb289",
        "filename": "nfEngine/nfCommon/Win/FileSystem.cpp",
        "patchSetId": 5
      },
      "lineNbr": 99,
      "author": {
        "id": 1002654
      },
      "writtenOn": "2015-06-19T14:15:10Z",
      "side": 1,
      "message": "rm",
      "range": {
        "startLine": 99,
        "startChar": 9,
        "endLine": 99,
        "endChar": 12
      },
      "revId": "46c9b61e4c5c436b07db31573440288b904c3cd9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_9456e628",
        "filename": "nfEngine/nfCommon/Win/FileSystem.cpp",
        "patchSetId": 5
      },
      "lineNbr": 99,
      "author": {
        "id": 1003055
      },
      "writtenOn": "2015-06-19T15:15:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "facab960_f47bb289",
      "range": {
        "startLine": 99,
        "startChar": 9,
        "endLine": 99,
        "endChar": 12
      },
      "revId": "46c9b61e4c5c436b07db31573440288b904c3cd9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_345b5a2f",
        "filename": "nfEngine/nfCommon/Win/FileSystem.cpp",
        "patchSetId": 5
      },
      "lineNbr": 104,
      "author": {
        "id": 1002654
      },
      "writtenOn": "2015-06-19T14:15:10Z",
      "side": 1,
      "message": "According to MSDN: \"If the buffer is too small to hold the module name, the string is truncated to nSize characters including the terminating null character, the function returns nSize, and the function sets the last error to ERROR_INSUFFICIENT_BUFFER.\"",
      "revId": "46c9b61e4c5c436b07db31573440288b904c3cd9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_f43812f1",
        "filename": "nfEngine/nfCommon/Win/FileSystem.cpp",
        "patchSetId": 5
      },
      "lineNbr": 104,
      "author": {
        "id": 1003055
      },
      "writtenOn": "2015-06-19T15:15:19Z",
      "side": 1,
      "message": "Yup, that means that if sizeRead is greater or equal to nSize, the function failed. When this function succeeds, sizeRead \u003c len.",
      "parentUuid": "facab960_345b5a2f",
      "revId": "46c9b61e4c5c436b07db31573440288b904c3cd9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_94498662",
        "filename": "nfEngine/nfCommon/Win/FileSystem.cpp",
        "patchSetId": 5
      },
      "lineNbr": 105,
      "author": {
        "id": 1002654
      },
      "writtenOn": "2015-06-19T14:15:10Z",
      "side": 1,
      "message": "Memory leak (execPath)",
      "revId": "46c9b61e4c5c436b07db31573440288b904c3cd9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_143ad6e6",
        "filename": "nfEngine/nfCommon/Win/FileSystem.cpp",
        "patchSetId": 5
      },
      "lineNbr": 105,
      "author": {
        "id": 1003055
      },
      "writtenOn": "2015-06-19T15:15:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "facab960_94498662",
      "revId": "46c9b61e4c5c436b07db31573440288b904c3cd9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_546a9eb3",
        "filename": "nfEngine/nfCommon/Win/FileSystem.cpp",
        "patchSetId": 5
      },
      "lineNbr": 111,
      "author": {
        "id": 1002654
      },
      "writtenOn": "2015-06-19T14:15:10Z",
      "side": 1,
      "message": "Maybe just move UTF-16 -\u003e UTF-8 conversion to for loop, and after the loop print error only",
      "range": {
        "startLine": 111,
        "startChar": 8,
        "endLine": 111,
        "endChar": 43
      },
      "revId": "46c9b61e4c5c436b07db31573440288b904c3cd9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_343fdad7",
        "filename": "nfEngine/nfCommon/Win/FileSystem.cpp",
        "patchSetId": 5
      },
      "lineNbr": 111,
      "author": {
        "id": 1003055
      },
      "writtenOn": "2015-06-19T15:15:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "facab960_546a9eb3",
      "range": {
        "startLine": 111,
        "startChar": 8,
        "endLine": 111,
        "endChar": 43
      },
      "revId": "46c9b61e4c5c436b07db31573440288b904c3cd9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_88f15703",
        "filename": "nfEngine/nfCommon/Win/FileSystem.cpp",
        "patchSetId": 5
      },
      "lineNbr": 117,
      "author": {
        "id": 1002655
      },
      "writtenOn": "2015-06-24T08:37:12Z",
      "side": 1,
      "message": "This might be a similar situation to Linux version. I don\u0027t know how your code looks now, after MW\u0027s comments, so just make sure there will be no free/delete on a nullptr.",
      "revId": "46c9b61e4c5c436b07db31573440288b904c3cd9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}