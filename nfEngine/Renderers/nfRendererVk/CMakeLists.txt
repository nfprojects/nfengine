# @file
# @author LKostyra (costyrra.xl@gmail.com)
# @brief  CMake for nfRendererVk

MESSAGE("Generating Makefile for nfRendererVk")

FILE(GLOB NFRENDERERVK_INTERNAL_SOURCES        Internal/*.cpp)
FILE(GLOB NFRENDERERVK_INTERNAL_HEADERS        Internal/*.hpp)
FILE(GLOB NFRENDERERVK_INTERNAL_LINUX_SOURCES  Internal/Linux/*.cpp)
FILE(GLOB NFRENDERERVK_INTERNAL_LINUX_HEADERS  Internal/Linux/*.hpp)
FILE(GLOB NFRENDERERVK_API_SOURCES             API/*.cpp)
FILE(GLOB NFRENDERERVK_API_HEADERS             API/*.hpp)
FILE(GLOB NFRENDERERVK_API_LINUX_SOURCES       API/Linux/*.cpp)
FILE(GLOB NFRENDERERVK_API_LINUX_HEADERS       API/Linux/*.hpp)

# Skips Main.cpp on purpose, because there's only Main.cpp definition for Win32
SET(NFRENDERERVK_MAIN_SOURCES PCH.cpp)
SET(NFRENDERERVK_MAIN_HEADERS PCH.hpp)

INCLUDE_DIRECTORIES(${NFE_ROOT_DIRECTORY}/nfEngineDeps/
                    ${NFENGINE_DIRECTORY}
                    ${VULKAN_SDK}/include
                    ${NFRENDERERVK_DIRECTORY})
LINK_DIRECTORIES(${NFEDEPS_LIB_DIRECTORY})

# To enable XCB-specific Vulkan extensions
ADD_DEFINITIONS(-DVK_USE_PLATFORM_XCB_KHR)

ADD_LIBRARY(nfRendererVk SHARED
            ${NFRENDERERVK_INTERNAL_SOURCES} ${NFRENDERERVK_INTERNAL_HEADERS}
            ${NFRENDERERVK_INTERNAL_LINUX_SOURCES} ${NFRENDERERVK_INTERNAL_LINUX_HEADERS}
            ${NFRENDERERVK_API_SOURCES} ${NFRENDERERVK_API_HEADERS}
            ${NFRENDERERVK_API_LINUX_SOURCES} ${NFRENDERERVK_API_LINUX_HEADERS}
            ${NFRENDERERVK_MAIN_SOURCES} ${NFRENDERERVK_MAIN_HEADERS})

SET_TARGET_PROPERTIES(nfRendererVk PROPERTIES COTIRE_CXX_PREFIX_HEADER_INIT "PCH.hpp")

TARGET_LINK_LIBRARIES(nfRendererVk vulkan glslang hlsl SPIRV OGLCompiler OSDependent)

ADD_CUSTOM_COMMAND(TARGET nfRendererVk POST_BUILD COMMAND
                   ${CMAKE_COMMAND} -E copy $<TARGET_FILE:nfRendererVk> ${NFE_OUTPUT_DIRECTORY}/${targetfile})

cotire(nfRendererVk)
