/**
 * @file
 * @author Witek902 (witek902@gmail.com)
 * @brief  Declarations of DepthStencilScene functions
 */

#pragma once

#include "Scene.hpp"

class DepthStencilScene: public Scene
{
    /// Renderer interfaces generated by the scene
    std::unique_ptr<NFE::Renderer::IBackbuffer> mWindowBackbuffer;
    std::unique_ptr<NFE::Renderer::IRenderTarget> mWindowRenderTarget;
    std::unique_ptr<NFE::Renderer::ITexture> mDepthBuffer;

    std::unique_ptr<NFE::Renderer::IShader> mVertexShader;
    std::unique_ptr<NFE::Renderer::IShader> mPixelShader;
    std::unique_ptr<NFE::Renderer::IBuffer> mConstantBuffer;
    std::unique_ptr<NFE::Renderer::IBuffer> mVertexBuffer;
    std::unique_ptr<NFE::Renderer::IBuffer> mIndexBuffer;
    std::unique_ptr<NFE::Renderer::IVertexLayout> mVertexLayout;
    std::unique_ptr<NFE::Renderer::IShaderProgram> mShaderProgram;

    std::unique_ptr<NFE::Renderer::IBlendState> mFloorBlendState;
    std::unique_ptr<NFE::Renderer::IDepthState> mMaskDepthState;
    std::unique_ptr<NFE::Renderer::IDepthState> mReflectionDepthState;
    std::unique_ptr<NFE::Renderer::IDepthState> mDepthState;
    std::unique_ptr<NFE::Renderer::IRasterizerState> mRasterizerState;

    NFE::Renderer::ShaderProgramDesc mShaderProgramDesc;

    float mAngle;

    void ReleaseSubsceneResources();

    bool CreateBasicResources(bool withStencil);
    bool CreateDepthBuffer(bool withStencil);

    /// Subscenes
    bool CreateSubSceneNoDepthBuffer();
    bool CreateSubSceneDepthBuffer();
    bool CreateSubSceneDepthStencilBuffer();
    // TODO: multisampled depth buffer

public:
    DepthStencilScene();
    ~DepthStencilScene();

    bool OnInit(void* winHandle);
    bool OnSwitchSubscene();
    void Draw(float dt);
    void Release();
};
