/**
 * @file
 * @author Witek902 (witek902@gmail.com)
 * @brief  Declarations of TessellationScene functions
 */

#pragma once

#include "Scene.hpp"

class TessellationScene : public Scene
{
    // Renderer interfaces generated by BasicScene
    NFE::Renderer::RenderTargetPtr mWindowRenderTarget;
    NFE::Renderer::PipelineStatePtr mPipelineState;

    NFE::Renderer::ShaderPtr mVertexShader;
    NFE::Renderer::ShaderPtr mHullShader;
    NFE::Renderer::ShaderPtr mDomainShader;
    NFE::Renderer::ShaderPtr mPixelShader;

    NFE::Renderer::BufferPtr mVertexBuffer;
    NFE::Renderer::VertexLayoutPtr mVertexLayout;
    NFE::Renderer::ResourceBindingLayoutPtr mResBindingLayout;

    // Releases only subscene-related resources. Backbuffer, RT and BlendState stay intact.
    void ReleaseSubsceneResources() override;

    // Resource creators for subscenes
    bool LoadShaders();
    bool CreateVertexBuffer();

    // Subscenes
    bool CreateSubSceneBezierLine();
    // TODO more subscenes testing triangle patches, variable tesselation factor, etc.

public:
    TessellationScene();
    ~TessellationScene();

    bool OnInit(void* winHandle) override;
    void Draw(float dt) override;
    void Release() override;
};
