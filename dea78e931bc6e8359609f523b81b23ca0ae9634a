{
  "comments": [
    {
      "key": {
        "uuid": "baa041b7_32d5d81a",
        "filename": "nfEngine/nfCommon/Math/Conversions.cpp",
        "patchSetId": 5
      },
      "lineNbr": 75,
      "author": {
        "id": 1003055
      },
      "writtenOn": "2016-09-07T10:23:52Z",
      "side": 1,
      "message": "I think, you should be consequent and change it to UINT*_MAX, UINT*_MIN macros",
      "range": {
        "startLine": 75,
        "startChar": 45,
        "endLine": 75,
        "endChar": 57
      },
      "revId": "dea78e931bc6e8359609f523b81b23ca0ae9634a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_12dc1445",
        "filename": "nfEngine/nfCommon/Math/Conversions.cpp",
        "patchSetId": 5
      },
      "lineNbr": 80,
      "author": {
        "id": 1003055
      },
      "writtenOn": "2016-09-07T10:23:52Z",
      "side": 1,
      "message": "I think, you should be consequent and change it to UINT*_MAX, UINT*_MIN macros",
      "range": {
        "startLine": 80,
        "startChar": 30,
        "endLine": 80,
        "endChar": 36
      },
      "revId": "dea78e931bc6e8359609f523b81b23ca0ae9634a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_52d29c35",
        "filename": "nfEngine/nfCommon/Math/Conversions.cpp",
        "patchSetId": 5
      },
      "lineNbr": 85,
      "author": {
        "id": 1003055
      },
      "writtenOn": "2016-09-07T10:23:52Z",
      "side": 1,
      "message": "I think, you should be consequent and change it to INT*_MAX, INT*_MIN macros",
      "range": {
        "startLine": 85,
        "startChar": 44,
        "endLine": 85,
        "endChar": 59
      },
      "revId": "dea78e931bc6e8359609f523b81b23ca0ae9634a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_f2de503d",
        "filename": "nfEngine/nfCommon/Math/Conversions.cpp",
        "patchSetId": 5
      },
      "lineNbr": 106,
      "author": {
        "id": 1003055
      },
      "writtenOn": "2016-09-07T10:23:52Z",
      "side": 1,
      "message": "uint16_min?",
      "range": {
        "startLine": 106,
        "startChar": 46,
        "endLine": 106,
        "endChar": 50
      },
      "revId": "dea78e931bc6e8359609f523b81b23ca0ae9634a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_92f024cb",
        "filename": "nfEngine/nfCommon/Math/Conversions.cpp",
        "patchSetId": 5
      },
      "lineNbr": 106,
      "author": {
        "id": 1003055
      },
      "writtenOn": "2016-09-07T10:23:52Z",
      "side": 1,
      "message": "there are a lot of static_casts, ofc we need them, so no problem with that...but maybe we could convert all those static_casts to defines or constexprs, to make sure we dont get redundant casts",
      "range": {
        "startLine": 106,
        "startChar": 52,
        "endLine": 106,
        "endChar": 82
      },
      "revId": "dea78e931bc6e8359609f523b81b23ca0ae9634a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_12409406",
        "filename": "nfEngine/nfCommon/Math/Conversions.hpp",
        "patchSetId": 5
      },
      "lineNbr": 19,
      "author": {
        "id": 1002655
      },
      "writtenOn": "2016-09-07T09:22:07Z",
      "side": 1,
      "message": "ToFloat",
      "range": {
        "startLine": 19,
        "startChar": 19,
        "endLine": 19,
        "endChar": 42
      },
      "revId": "dea78e931bc6e8359609f523b81b23ca0ae9634a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_a1207cf9",
        "filename": "nfEngine/nfCommon/Math/Math.hpp",
        "patchSetId": 5
      },
      "lineNbr": 133,
      "author": {
        "id": 1003055
      },
      "writtenOn": "2016-09-07T10:23:52Z",
      "side": 1,
      "message": "this can be a oneliner\nreturn (x \u003c static_cast\u003cT\u003e(0)) ? -x : x;",
      "range": {
        "startLine": 130,
        "startChar": 4,
        "endLine": 133,
        "endChar": 13
      },
      "revId": "dea78e931bc6e8359609f523b81b23ca0ae9634a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_32b838c7",
        "filename": "nfEngine/nfCommonTest/MathTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 1003055
      },
      "writtenOn": "2016-09-07T10:23:52Z",
      "side": 1,
      "message": "shouldn\u0027t we generate random values here? Ofc because we\u0027re testing, You can use some standard stuff like rand() from \u003ccstdlib\u003e or have some fun with \u003crandom\u003e library...or just use our random :\u003e",
      "range": {
        "startLine": 26,
        "startChar": 4,
        "endLine": 26,
        "endChar": 90
      },
      "revId": "dea78e931bc6e8359609f523b81b23ca0ae9634a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}