{
  "comments": [
    {
      "key": {
        "uuid": "facab960_7db4d781",
        "filename": "nfEngine/Renderers/RendererInterface/Shader.hpp",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 1002655
      },
      "writtenOn": "2015-06-24T07:42:03Z",
      "side": 1,
      "message": "@param",
      "revId": "d36b895911e4cbba2a5288ca62a40f0cce0cecea",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_5dc393ec",
        "filename": "nfEngine/Renderers/RendererInterface/Shader.hpp",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 1002655
      },
      "writtenOn": "2015-06-24T07:42:03Z",
      "side": 1,
      "message": "Switch the args. Output should always be at the end of the list.",
      "revId": "d36b895911e4cbba2a5288ca62a40f0cce0cecea",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_1da58b46",
        "filename": "nfEngine/Renderers/nfRendererD3D11/Shader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 163,
      "author": {
        "id": 1002655
      },
      "writtenOn": "2015-06-24T07:42:03Z",
      "side": 1,
      "message": "I did some search on GLSL disassembly and it looks like OpenGL does not provide any API to strictly disassemble binary code. You can acquire binary code and it contains the disassembly, however after a \"garbage\", also known as proper binary code. An alternative is to use glGetShaderSource, however it returns the source code, not the assembly.\n\nImplementing Disassemble on RendererOGL4 will be possible, however do we really need this function? What will be its purpose?",
      "revId": "d36b895911e4cbba2a5288ca62a40f0cce0cecea",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_08ab8775",
        "filename": "nfEngine/Renderers/nfRendererD3D11/Shader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 163,
      "author": {
        "id": 1002654
      },
      "writtenOn": "2015-06-24T09:35:38Z",
      "side": 1,
      "message": "The purpose of disassembling shaders is to analyze compiler output and optimize it if possible. Without disassembly you don\u0027t know what\u0027s happening underneath. If it\u0027s not supported in OpenGL then the OGL version of this function should return an empty string",
      "parentUuid": "facab960_1da58b46",
      "revId": "d36b895911e4cbba2a5288ca62a40f0cce0cecea",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_c36980bf",
        "filename": "nfEngine/Renderers/nfRendererD3D11/Shader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 163,
      "author": {
        "id": 1002655
      },
      "writtenOn": "2015-06-24T11:05:46Z",
      "side": 1,
      "message": "OK, if you say so. I will look more in depth into disassembling shaders in OGL, if all else fails it will return an empty string.",
      "parentUuid": "facab960_08ab8775",
      "revId": "d36b895911e4cbba2a5288ca62a40f0cce0cecea",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_bd781fc5",
        "filename": "nfEngine/Renderers/nfRendererD3D11/Shader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 200,
      "author": {
        "id": 1002655
      },
      "writtenOn": "2015-06-24T07:42:03Z",
      "side": 1,
      "message": "Reimplementing GetIODesc might be troublesome on OpenGL. Looking at official reference, it looks like there is no function to acquire IODesc from shader. Same questions as above.",
      "revId": "d36b895911e4cbba2a5288ca62a40f0cce0cecea",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_88979739",
        "filename": "nfEngine/Renderers/nfRendererD3D11/Shader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 200,
      "author": {
        "id": 1002654
      },
      "writtenOn": "2015-06-24T09:35:38Z",
      "side": 1,
      "message": "http://stackoverflow.com/questions/440144/in-opengl-is-there-a-way-to-get-a-list-of-all-uniforms-attribs-used-by-a-shade",
      "parentUuid": "facab960_bd781fc5",
      "revId": "d36b895911e4cbba2a5288ca62a40f0cce0cecea",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_a371dca9",
        "filename": "nfEngine/Renderers/nfRendererD3D11/Shader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 200,
      "author": {
        "id": 1002655
      },
      "writtenOn": "2015-06-24T11:05:46Z",
      "side": 1,
      "message": "Indeed, Uniforms. I always forget the naming, nvm.",
      "parentUuid": "facab960_88979739",
      "revId": "d36b895911e4cbba2a5288ca62a40f0cce0cecea",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_1df74b5a",
        "filename": "nfEngine/nfRendererTest/Shader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1002655
      },
      "writtenOn": "2015-06-24T07:42:03Z",
      "side": 1,
      "message": "You already check for cbufferDesc not being equal to the end iterator. Why not change the check from EXPECT to ASSERT? If the assert fails, there\u0027s no need to check further, because the test is already failed.",
      "revId": "d36b895911e4cbba2a5288ca62a40f0cce0cecea",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_3d97afed",
        "filename": "nfEngine/nfRendererTest/Shader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1002655
      },
      "writtenOn": "2015-06-24T07:42:03Z",
      "side": 1,
      "message": "Magic number",
      "range": {
        "startLine": 69,
        "startChar": 14,
        "endLine": 69,
        "endChar": 15
      },
      "revId": "d36b895911e4cbba2a5288ca62a40f0cce0cecea",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_fd90e7ee",
        "filename": "nfEngine/nfRendererTest/Shader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 1002655
      },
      "writtenOn": "2015-06-24T07:42:03Z",
      "side": 1,
      "message": "In general it is a very bad idea to output something additional (except for logs produced by tested functions) during the test. Only some special cases, like in SystemInfo, should do so. And, honestly, no one would like to read through GPU assembly code every time tests are run. :)\n\nI thought about comparing the disassembly to the disassembly file created earlier by us as a point of reference, however such file might vary depending not only on used API, but on GPU vendor as well. If Disassemble will stay, I would leave the check for length only.",
      "revId": "d36b895911e4cbba2a5288ca62a40f0cce0cecea",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}