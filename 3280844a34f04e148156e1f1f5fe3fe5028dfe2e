{
  "comments": [
    {
      "key": {
        "uuid": "baa041b7_702ce398",
        "filename": "nfEngine/nfCommon/Logger.cpp",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1002654
      },
      "writtenOn": "2016-05-31T18:34:55Z",
      "side": 1,
      "message": "move to header and use it there as well",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 23,
        "endChar": 69
      },
      "revId": "3280844a34f04e148156e1f1f5fe3fe5028dfe2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_b02eeb89",
        "filename": "nfEngine/nfCommon/Logger.cpp",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1002654
      },
      "writtenOn": "2016-05-31T18:34:55Z",
      "side": 1,
      "message": "And now all backends are gone :) Maybe we should have LoggerBackend::Start/Stop methods and here we would call Stop and Start for every register backend?",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 24
      },
      "revId": "3280844a34f04e148156e1f1f5fe3fe5028dfe2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_300bfb25",
        "filename": "nfEngine/nfCommon/Logger.hpp",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1002654
      },
      "writtenOn": "2016-05-31T18:34:55Z",
      "side": 1,
      "message": "NFE_INLINE",
      "revId": "3280844a34f04e148156e1f1f5fe3fe5028dfe2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_1017d748",
        "filename": "nfEngine/nfCommon/Logger.hpp",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1002654
      },
      "writtenOn": "2016-05-31T18:34:55Z",
      "side": 1,
      "message": "NFE_INLINE bool IsEnabled() const",
      "revId": "3280844a34f04e148156e1f1f5fe3fe5028dfe2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_b0170b44",
        "filename": "nfEngine/nfCommon/Logger.hpp",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 1002654
      },
      "writtenOn": "2016-05-31T18:34:55Z",
      "side": 1,
      "message": "why is this a function? it should be static variable",
      "range": {
        "startLine": 71,
        "startChar": 76,
        "endLine": 71,
        "endChar": 88
      },
      "revId": "3280844a34f04e148156e1f1f5fe3fe5028dfe2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_f0111353",
        "filename": "nfEngine/nfCommon/Logger.hpp",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 1002654
      },
      "writtenOn": "2016-05-31T18:34:55Z",
      "side": 1,
      "message": "const std::string\u0026",
      "range": {
        "startLine": 85,
        "startChar": 43,
        "endLine": 85,
        "endChar": 54
      },
      "revId": "3280844a34f04e148156e1f1f5fe3fe5028dfe2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_d033aff4",
        "filename": "nfEngine/nfCommon/LoggerBackends/BackendConsole.cpp",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1002654
      },
      "writtenOn": "2016-05-31T18:34:55Z",
      "side": 1,
      "message": "initialize mIsEnabled in LoggerBackend constructor. Then you don\u0027t need to write this in every backend",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 45,
        "endChar": 1
      },
      "revId": "3280844a34f04e148156e1f1f5fe3fe5028dfe2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}